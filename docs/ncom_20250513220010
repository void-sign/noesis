#!/usr/bin/env fish

# Noesis Command (ncom) - Short command interface for Noesis project
# Created: May 13, 2025

# Define colors for better readability
set GREEN (set_color green)
set YELLOW (set_color yellow)
set RED (set_color red)
set NC (set_color normal)

function print_usage
    echo "Noesis Command (ncom) - Short interface for Noesis operations"
    echo
    echo "Usage: ncom [command] [options]"
    echo
    echo "Structure Management:"
    echo "  "$GREEN"save, -s"$NC"        Save current project structure state"
    echo "  "$GREEN"continue, -c"$NC"    Restore latest saved structure state"
    echo
    echo "Build Commands:"
    echo "  "$GREEN"build, -b"$NC"       Build the Noesis core"
    echo "  "$GREEN"run, -r"$NC"         Run the Noesis core"
    echo "  "$GREEN"test, -t"$NC"        Run all tests"
    echo
    echo "Maintenance:"
    echo "  "$GREEN"clean"$NC"           Clean up build artifacts"
    echo "  "$GREEN"help, -h"$NC"        Display this help message"
    echo
end

# Process command
switch "$argv[1]"
    case "save" "-s"
        echo $YELLOW"Saving current project structure state..."$NC
        fish "./scripts/save_structure_state.fish"
        
    case "continue" "-c"
        echo $YELLOW"Restoring latest saved project structure state..."$NC
        
        # Find the latest timestamp in the docs directory
        set -l latest_timestamp ""
        if test -d "docs"
            # Get only the timestamp part from the filename (after the last underscore)
            set latest_timestamp (ls -1 docs/directory_structure_*.txt 2>/dev/null | sort -r | head -1 | sed -n 's/.*structure_\([0-9]*\)\.txt$/\1/p')
        end
        
        if test -z "$latest_timestamp"
            echo $RED"Error: No saved structure states found in docs directory"$NC
            exit 1
        end
        
        echo $YELLOW"Found latest structure state: "$GREEN"$latest_timestamp"$NC
        fish "./scripts/restore_structure_state.fish" $latest_timestamp
        
    case "build" "-b"
        echo $YELLOW"Building Noesis..."$NC
        if test -f "./scripts/fish/build_all.fish"
            fish "./scripts/fish/build_all.fish"
        else
            echo $RED"Error: build script not found"$NC
            exit 1
        end
        
    case "run" "-r"
        echo $YELLOW"Running Noesis..."$NC
        if test -f "./scripts/fish/run_core.fish"
            fish "./scripts/fish/run_core.fish"
        else
            echo $RED"Error: run script not found"$NC
            exit 1
        end
        
    case "test" "-t"
        echo $YELLOW"Running tests..."$NC
        if test -f "./scripts/fish/run_all_tests.fish"
            fish "./scripts/fish/run_all_tests.fish"
        else
            echo $RED"Error: test script not found"$NC
            exit 1
        end
        
    case "clean"
        echo $YELLOW"Cleaning build artifacts..."$NC
        make clean
        
    case "help" "-h" ""
        print_usage
        
    case "*"
        echo $RED"Unknown command: $argv[1]"$NC
        print_usage
        exit 1
end