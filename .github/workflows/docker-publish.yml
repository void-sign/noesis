name: Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write # For Trivy vulnerability scanner
    
    # Add concurrency group to ensure only one job runs per day
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.repository.name }}-${{ format('{0:yyyy-MM-dd}', github.event.repository.pushed_at) }}
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx for better caching and multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # Extract metadata (tags, labels) for Docker
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/noesis
        tags: |
          type=raw,value=latest
          type=raw,value={{date 'YYYYMMDD'}}
          type=sha,format=short,prefix=commit-
    
    # Set up cache for Docker layers
    - name: Set up Docker layer caching
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    
    # Move cache to prevent cache from growing too large
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    
    # Scan Docker image for vulnerabilities
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ github.repository_owner }}/noesis:latest
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    # Upload vulnerability report to GitHub Security tab
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always() # Upload even if previous step fails
      with:
        sarif_file: 'trivy-results.sarif'
    
    # Create GitHub Issue if vulnerability is found
    - name: Check for vulnerabilities and create issue
      if: success() || failure() # Run regardless of prior steps
      run: |
        if [ -s trivy-results.sarif ]; then
          echo "::warning::Critical or high vulnerabilities detected in the Docker image."
          echo "Creating GitHub issue for vulnerabilities..."
          gh issue create --title "Security Alert: Docker Image Vulnerabilities Detected" \
                         --body "Security vulnerabilities were detected in the latest Docker image build. Please check the security tab in the repository for details." \
                         --label "security"
        else
          echo "No critical or high vulnerabilities found in the Docker image."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    # Notify about successful push
    - name: Send notification
      if: success()
      run: |
        echo "::notice::Docker image successfully published to GitHub Container Registry"
        echo "Image available at: ghcr.io/${{ github.repository_owner }}/noesis:latest"
        echo "Image also tagged with date: ghcr.io/${{ github.repository_owner }}/noesis:$(date +'%Y%m%d')"
